<svg height="6652" width="1186" xmlns="http://www.w3.org/2000/svg" xmlns:ed="https://www.edrawsoft.cn/xml/2017/SVGExtensions/" ed:hSpacing="30" ed:vSpacing="30" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 1186 6652" xmlns:ev="http://www.w3.org/2001/xml-events" ed:name="Page-1" id="page100"><style type="text/css"><![CDATA[
g[ed\:togtopicid],g[ed\:hyperlink],g[ed\:comment],g[ed\:note] {cursor:pointer;}
g[id] {-moz-user-select: none;-ms-user-select: none;user-select: none;}
svg text::selection,svg tspan::selection{background-color: #4285f4;color: #ffffff;fill: #ffffff;}
.st2 {fill:#303030;font-family:微软雅黑;font-size:12pt}
.st3 {fill:#454545;font-family:微软雅黑;font-size:10pt}
.st1 {fill:#ffffff;font-family:微软雅黑;font-size:14pt}
]]></style><defs><linearGradient x2="0%" y2="100%" y1="0%" x1="0%" id="lg1"><stop offset="0" stop-color="#ffffff"/><stop offset="0.25" stop-color="#f0f5f0"/><stop offset="0.75" stop-color="#e1ebe1"/><stop offset="1" stop-color="#c8d7c8"/></linearGradient></defs><rect height="6652" y="0" width="1186" fill="#ffffff" x="0"/><path transform="matrix(1,0,0,1,233,2368)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="101" d="M-67.2,929.1C19.6,691.1,-77.9,-957.6,91,-957.6" ed:tosuperid="102" stroke-linejoin="round" id="103"/><path transform="matrix(1,0,0,1,233,3929)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="101" d="M-62,-574.1C15.7,-391.9,-74.3,602.6,91,602.6" ed:tosuperid="104" stroke-linejoin="round" id="105"/><path transform="matrix(1,0,0,1,233,4858)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="101" d="M-71.7,-1503.9C22.9,-1194.3,-80.7,1532.4,91,1532.4" ed:tosuperid="106" stroke-linejoin="round" id="107"/><path transform="matrix(1,0,0,1,233,4941)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="101" d="M-72.1,-1586.9C23.3,-1268.2,-80.9,1615.4,91,1615.4" ed:tosuperid="108" stroke-linejoin="round" id="109"/><path transform="matrix(1,0,0,1,425,3820)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="104" d="M-13.5,710.9C5.4,710.9,-13.5,-710.9,13.5,-710.9" ed:tosuperid="110" stroke-linejoin="round" id="111"/><path transform="matrix(1,0,0,1,425,4137)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="104" d="M-13.5,394.1C5.4,394.1,-13.5,-394.1,13.5,-394.1" ed:tosuperid="112" stroke-linejoin="round" id="113"/><path transform="matrix(1,0,0,1,425,4394)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="104" d="M-13.5,136.9C5.4,136.9,-13.5,-136.9,13.5,-136.9" ed:tosuperid="114" stroke-linejoin="round" id="115"/><path transform="matrix(1,0,0,1,425,4611)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="104" d="M-13.5,-79.4C5.4,-79.4,-13.5,79.4,13.5,79.4" ed:tosuperid="116" stroke-linejoin="round" id="117"/><path transform="matrix(1,0,0,1,425,4807)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="104" d="M-13.5,-275.9C5.4,-275.9,-13.5,275.9,13.5,275.9" ed:tosuperid="118" stroke-linejoin="round" id="119"/><path transform="matrix(1,0,0,1,425,5018)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="104" d="M-13.5,-486.6C5.4,-486.6,-13.5,486.6,13.5,486.6" ed:tosuperid="120" stroke-linejoin="round" id="121"/><path transform="matrix(1,0,0,1,425,5200)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="104" d="M-13.5,-668.9C5.4,-668.9,-13.5,668.9,13.5,668.9" ed:tosuperid="122" stroke-linejoin="round" id="123"/><path transform="matrix(1,0,0,1,425,5314)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="104" d="M-13.5,-782.6C5.4,-782.6,-13.5,782.6,13.5,782.6" ed:tosuperid="124" stroke-linejoin="round" id="125"/><path transform="matrix(1,0,0,1,425,5395)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="104" d="M-13.5,-863.6C5.4,-863.6,-13.5,863.6,13.5,863.6" ed:tosuperid="126" stroke-linejoin="round" id="127"/><path transform="matrix(1,0,0,1,425,786)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,624.4C5.4,624.4,-13.5,-624.4,13.5,-624.4" ed:tosuperid="128" stroke-linejoin="round" id="129"/><path transform="matrix(1,0,0,1,425,860)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,551.1C5.4,551.1,-13.5,-551.1,13.5,-551.1" ed:tosuperid="130" stroke-linejoin="round" id="131"/><path transform="matrix(1,0,0,1,425,917)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,493.4C5.4,493.4,-13.5,-493.4,13.5,-493.4" ed:tosuperid="132" stroke-linejoin="round" id="133"/><path transform="matrix(1,0,0,1,425,1047)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,364.1C5.4,364.1,-13.5,-364.1,13.5,-364.1" ed:tosuperid="134" stroke-linejoin="round" id="135"/><path transform="matrix(1,0,0,1,425,1206)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,205.1C5.4,205.1,-13.5,-205.1,13.5,-205.1" ed:tosuperid="136" stroke-linejoin="round" id="137"/><path transform="matrix(1,0,0,1,425,1323)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,87.9C5.4,87.9,-13.5,-87.9,13.5,-87.9" ed:tosuperid="138" stroke-linejoin="round" id="139"/><path transform="matrix(1,0,0,1,425,1463)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,-52.6C5.4,-52.6,-13.5,52.6,13.5,52.6" ed:tosuperid="140" stroke-linejoin="round" id="141"/><path transform="matrix(1,0,0,1,425,1540)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,-128.9C5.4,-128.9,-13.5,128.9,13.5,128.9" ed:tosuperid="142" stroke-linejoin="round" id="143"/><path transform="matrix(1,0,0,1,425,1611)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,-200.4C5.4,-200.4,-13.5,200.4,13.5,200.4" ed:tosuperid="144" stroke-linejoin="round" id="145"/><path transform="matrix(1,0,0,1,425,1755)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,-343.9C5.4,-343.9,-13.5,343.9,13.5,343.9" ed:tosuperid="146" stroke-linejoin="round" id="147"/><path transform="matrix(1,0,0,1,425,1897)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,-486.1C5.4,-486.1,-13.5,486.1,13.5,486.1" ed:tosuperid="148" stroke-linejoin="round" id="149"/><path transform="matrix(1,0,0,1,425,2019)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="102" d="M-13.5,-608.1C5.4,-608.1,-13.5,608.1,13.5,608.1" ed:tosuperid="150" stroke-linejoin="round" id="151"/><path transform="matrix(1,0,0,1,425,6532)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="108" d="M-13.5,24.9C2.7,24.9,-7.1,-24.9,13.5,-24.9" ed:tosuperid="152" stroke-linejoin="round" id="153"/><path transform="matrix(1,0,0,1,425,6547)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="108" d="M-13.5,9.4C-0.5,9.4,0.3,-9.4,13.5,-9.4" ed:tosuperid="154" stroke-linejoin="round" id="155"/><path transform="matrix(1,0,0,1,425,6578)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="108" d="M-13.5,-21.6C2.1,-21.6,-5.7,21.6,13.5,21.6" ed:tosuperid="156" stroke-linejoin="round" id="157"/><path transform="matrix(1,0,0,1,233,1683)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="101" d="M-72.3,1614.8C23.4,1293.1,-81,-1643.3,91,-1643.3" ed:tosuperid="186" stroke-linejoin="round" id="187"/><path transform="matrix(1,0,0,1,425,46)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="186" d="M-13.5,-6.1C-1.3,-6.1,2.1,6.1,13.5,6.1" ed:tosuperid="188" stroke-linejoin="round" id="189"/><path transform="matrix(1,0,0,1,509,139)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="128" d="M-13.5,23.3C2.4,23.3,-6.4,-23.3,13.5,-23.3" ed:tosuperid="190" stroke-linejoin="round" id="191"/><path transform="matrix(1,0,0,1,509,154)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="128" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" ed:tosuperid="192" stroke-linejoin="round" id="193"/><path transform="matrix(1,0,0,1,509,170)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="128" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" ed:tosuperid="194" stroke-linejoin="round" id="195"/><path transform="matrix(1,0,0,1,509,185)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="128" d="M-13.5,-23.3C2.4,-23.3,-6.4,23.3,13.5,23.3" ed:tosuperid="196" stroke-linejoin="round" id="197"/><path transform="matrix(1,0,0,1,522,284)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="130" d="M-13.5,25C2.7,25,-7.2,-25,13.5,-25" ed:tosuperid="198" stroke-linejoin="round" id="199"/><path transform="matrix(1,0,0,1,522,318)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="130" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" ed:tosuperid="200" stroke-linejoin="round" id="201"/><path transform="matrix(1,0,0,1,522,343)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="130" d="M-13.5,-34.5C4.1,-34.5,-10.5,34.5,13.5,34.5" ed:tosuperid="202" stroke-linejoin="round" id="203"/><path transform="matrix(1,0,0,1,522,416)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="132" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" ed:tosuperid="204" stroke-linejoin="round" id="205"/><path transform="matrix(1,0,0,1,522,432)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="132" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" ed:tosuperid="206" stroke-linejoin="round" id="207"/><path transform="matrix(1,0,0,1,638,586)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,96.5C5.4,96.5,-13.5,-96.5,13.5,-96.5" ed:tosuperid="208" stroke-linejoin="round" id="209"/><path transform="matrix(1,0,0,1,638,611)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,71.5C5.4,71.5,-13.5,-71.5,13.5,-71.5" ed:tosuperid="210" stroke-linejoin="round" id="211"/><path transform="matrix(1,0,0,1,638,636)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,46.5C5.2,46.5,-13.1,-46.5,13.5,-46.5" ed:tosuperid="212" stroke-linejoin="round" id="213"/><path transform="matrix(1,0,0,1,638,652)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,31C3.7,31,-9.4,-31,13.5,-31" ed:tosuperid="214" stroke-linejoin="round" id="215"/><path transform="matrix(1,0,0,1,638,667)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" ed:tosuperid="216" stroke-linejoin="round" id="217"/><path transform="matrix(1,0,0,1,638,683)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" ed:tosuperid="218" stroke-linejoin="round" id="219"/><path transform="matrix(1,0,0,1,638,698)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" ed:tosuperid="220" stroke-linejoin="round" id="221"/><path transform="matrix(1,0,0,1,638,714)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,-31C3.7,-31,-9.4,31,13.5,31" ed:tosuperid="222" stroke-linejoin="round" id="223"/><path transform="matrix(1,0,0,1,638,748)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,-65.5C5.4,-65.5,-13.5,65.5,13.5,65.5" ed:tosuperid="224" stroke-linejoin="round" id="225"/><path transform="matrix(1,0,0,1,638,764)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,-81C5.4,-81,-13.5,81,13.5,81" ed:tosuperid="226" stroke-linejoin="round" id="227"/><path transform="matrix(1,0,0,1,638,789)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="134" d="M-13.5,-106C5.4,-106,-13.5,106,13.5,106" ed:tosuperid="228" stroke-linejoin="round" id="229"/><path transform="matrix(1,0,0,1,548,982)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="136" d="M-13.5,18.5C1.5,18.5,-4.3,-18.5,13.5,-18.5" ed:tosuperid="230" stroke-linejoin="round" id="231"/><path transform="matrix(1,0,0,1,548,1007)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="136" d="M-13.5,-6.5C-1.2,-6.5,1.8,6.5,13.5,6.5" ed:tosuperid="232" stroke-linejoin="round" id="233"/><path transform="matrix(1,0,0,1,548,1023)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="136" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" ed:tosuperid="234" stroke-linejoin="round" id="235"/><path transform="matrix(1,0,0,1,548,1038)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="136" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" ed:tosuperid="236" stroke-linejoin="round" id="237"/><path transform="matrix(1,0,0,1,522,1171)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="138" d="M-13.5,64.3C5.4,64.3,-13.5,-64.3,13.5,-64.3" ed:tosuperid="238" stroke-linejoin="round" id="239"/><path transform="matrix(1,0,0,1,522,1215)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="138" d="M-13.5,20.3C1.8,20.3,-5.1,-20.3,13.5,-20.3" ed:tosuperid="240" stroke-linejoin="round" id="241"/><path transform="matrix(1,0,0,1,522,1230)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="138" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" ed:tosuperid="242" stroke-linejoin="round" id="243"/><path transform="matrix(1,0,0,1,522,1265)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="138" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" ed:tosuperid="244" stroke-linejoin="round" id="245"/><path transform="matrix(1,0,0,1,522,1299)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="138" d="M-13.5,-64.3C5.4,-64.3,-13.5,64.3,13.5,64.3" ed:tosuperid="246" stroke-linejoin="round" id="247"/><path transform="matrix(1,0,0,1,522,1465)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="140" d="M-13.5,51.3C5.4,51.3,-13.4,-51.3,13.5,-51.3" ed:tosuperid="248" stroke-linejoin="round" id="249"/><path transform="matrix(1,0,0,1,522,1480)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="140" d="M-13.5,35.8C4.3,35.8,-10.9,-35.8,13.5,-35.8" ed:tosuperid="250" stroke-linejoin="round" id="251"/><path transform="matrix(1,0,0,1,522,1505)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="140" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" ed:tosuperid="252" stroke-linejoin="round" id="253"/><path transform="matrix(1,0,0,1,522,1521)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="140" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" ed:tosuperid="254" stroke-linejoin="round" id="255"/><path transform="matrix(1,0,0,1,522,1546)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="140" d="M-13.5,-29.8C3.5,-29.8,-9,29.8,13.5,29.8" ed:tosuperid="258" stroke-linejoin="round" id="259"/><path transform="matrix(1,0,0,1,522,1561)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="140" d="M-13.5,-45.3C5.1,-45.3,-12.9,45.3,13.5,45.3" ed:tosuperid="260" stroke-linejoin="round" id="261"/><path transform="matrix(1,0,0,1,522,1577)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="140" d="M-13.5,-60.8C5.4,-60.8,-13.5,60.8,13.5,60.8" ed:tosuperid="262" stroke-linejoin="round" id="263"/><path transform="matrix(1,0,0,1,540,1669)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="142" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" ed:tosuperid="264" stroke-linejoin="round" id="265"/><path transform="matrix(1,0,0,1,522,1765)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="144" d="M-13.5,46.5C5.2,46.5,-13.1,-46.5,13.5,-46.5" ed:tosuperid="266" stroke-linejoin="round" id="267"/><path transform="matrix(1,0,0,1,522,1790)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="144" d="M-13.5,21.5C2,21.5,-5.7,-21.5,13.5,-21.5" ed:tosuperid="268" stroke-linejoin="round" id="269"/><path transform="matrix(1,0,0,1,522,1806)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="144" d="M-13.5,6C-1.3,6,2.1,-6,13.5,-6" ed:tosuperid="270" stroke-linejoin="round" id="271"/><path transform="matrix(1,0,0,1,522,1821)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="144" d="M-13.5,-9.5C-0.5,-9.5,0.2,9.5,13.5,9.5" ed:tosuperid="272" stroke-linejoin="round" id="273"/><path transform="matrix(1,0,0,1,522,1837)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="144" d="M-13.5,-25C2.7,-25,-7.2,25,13.5,25" ed:tosuperid="274" stroke-linejoin="round" id="275"/><path transform="matrix(1,0,0,1,522,1852)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="144" d="M-13.5,-40.5C4.8,-40.5,-12.1,40.5,13.5,40.5" ed:tosuperid="276" stroke-linejoin="round" id="277"/><path transform="matrix(1,0,0,1,522,1868)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="144" d="M-13.5,-56C5.4,-56,-13.5,56,13.5,56" ed:tosuperid="278" stroke-linejoin="round" id="279"/><path transform="matrix(1,0,0,1,522,2036)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="146" d="M-13.5,62.5C5.4,62.5,-13.5,-62.5,13.5,-62.5" ed:tosuperid="280" stroke-linejoin="round" id="281"/><path transform="matrix(1,0,0,1,522,2061)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="146" d="M-13.5,37.5C4.5,37.5,-11.4,-37.5,13.5,-37.5" ed:tosuperid="282" stroke-linejoin="round" id="283"/><path transform="matrix(1,0,0,1,522,2086)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="146" d="M-13.5,12.5C0.2,12.5,-1.3,-12.5,13.5,-12.5" ed:tosuperid="284" stroke-linejoin="round" id="285"/><path transform="matrix(1,0,0,1,522,2111)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="146" d="M-13.5,-12.5C0.2,-12.5,-1.3,12.5,13.5,12.5" ed:tosuperid="286" stroke-linejoin="round" id="287"/><path transform="matrix(1,0,0,1,522,2136)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="146" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" ed:tosuperid="288" stroke-linejoin="round" id="289"/><path transform="matrix(1,0,0,1,522,2171)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="146" d="M-13.5,-72C5.4,-72,-13.5,72,13.5,72" ed:tosuperid="290" stroke-linejoin="round" id="291"/><path transform="matrix(1,0,0,1,522,2338)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="148" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" ed:tosuperid="292" stroke-linejoin="round" id="293"/><path transform="matrix(1,0,0,1,522,2382)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="148" d="M-13.5,1.3C-2.7,1.3,5.4,-1.3,13.5,-1.3" ed:tosuperid="294" stroke-linejoin="round" id="295"/><path transform="matrix(1,0,0,1,522,2397)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="148" d="M-13.5,-14.3C0.6,-14.3,-2.2,14.3,13.5,14.3" ed:tosuperid="296" stroke-linejoin="round" id="297"/><path transform="matrix(1,0,0,1,522,2422)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="148" d="M-13.5,-39.3C4.7,-39.3,-11.8,39.3,13.5,39.3" ed:tosuperid="298" stroke-linejoin="round" id="299"/><path transform="matrix(1,0,0,1,522,2438)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="148" d="M-13.5,-54.8C5.4,-54.8,-13.5,54.8,13.5,54.8" ed:tosuperid="300" stroke-linejoin="round" id="301"/><path transform="matrix(1,0,0,1,535,2594)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="150" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" ed:tosuperid="302" stroke-linejoin="round" id="303"/><path transform="matrix(1,0,0,1,535,2619)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="150" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" ed:tosuperid="304" stroke-linejoin="round" id="305"/><path transform="matrix(1,0,0,1,535,2654)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="150" d="M-13.5,-26.8C3,-26.8,-7.9,26.8,13.5,26.8" ed:tosuperid="306" stroke-linejoin="round" id="307"/><path transform="matrix(1,0,0,1,535,2679)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="150" d="M-13.5,-51.8C5.4,-51.8,-13.5,51.8,13.5,51.8" ed:tosuperid="308" stroke-linejoin="round" id="309"/><path transform="matrix(1,0,0,1,425,6374)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="106" d="M-13.5,17.1C1.2,17.1,-3.6,-17.1,13.5,-17.1" ed:tosuperid="310" stroke-linejoin="round" id="311"/><path transform="matrix(1,0,0,1,425,6389)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="106" d="M-13.5,1.6C-2.3,1.6,4.5,-1.6,13.5,-1.6" ed:tosuperid="312" stroke-linejoin="round" id="313"/><path transform="matrix(1,0,0,1,425,6405)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="106" d="M-13.5,-13.9C0.5,-13.9,-2,13.9,13.5,13.9" ed:tosuperid="314" stroke-linejoin="round" id="315"/><path transform="matrix(1,0,0,1,425,6420)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="106" d="M-13.5,-29.4C3.4,-29.4,-8.9,29.4,13.5,29.4" ed:tosuperid="316" stroke-linejoin="round" id="317"/><path transform="matrix(1,0,0,1,574,6507)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="152" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" ed:tosuperid="318" stroke-linejoin="round" id="319"/><path transform="matrix(1,0,0,1,548,6538)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="154" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" ed:tosuperid="320" stroke-linejoin="round" id="321"/><path transform="matrix(1,0,0,1,561,6585)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="156" d="M-13.5,15.5C0.8,15.5,-2.8,-15.5,13.5,-15.5" ed:tosuperid="322" stroke-linejoin="round" id="323"/><path transform="matrix(1,0,0,1,561,6600)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="156" d="M-13.5,0C-2.7,0,5.4,0,13.5,0" ed:tosuperid="324" stroke-linejoin="round" id="325"/><path transform="matrix(1,0,0,1,561,6616)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="156" d="M-13.5,-15.5C0.8,-15.5,-2.8,15.5,13.5,15.5" ed:tosuperid="326" stroke-linejoin="round" id="327"/><path transform="matrix(1,0,0,1,509,2949)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,160.8C5.4,160.8,-13.5,-160.8,13.5,-160.8" ed:tosuperid="396" stroke-linejoin="round" id="397"/><path transform="matrix(1,0,0,1,509,2964)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,145.3C5.4,145.3,-13.5,-145.3,13.5,-145.3" ed:tosuperid="398" stroke-linejoin="round" id="399"/><path transform="matrix(1,0,0,1,509,2989)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,120.3C5.4,120.3,-13.5,-120.3,13.5,-120.3" ed:tosuperid="400" stroke-linejoin="round" id="401"/><path transform="matrix(1,0,0,1,509,3005)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,104.8C5.4,104.8,-13.5,-104.8,13.5,-104.8" ed:tosuperid="402" stroke-linejoin="round" id="403"/><path transform="matrix(1,0,0,1,509,3020)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,89.3C5.4,89.3,-13.5,-89.3,13.5,-89.3" ed:tosuperid="406" stroke-linejoin="round" id="407"/><path transform="matrix(1,0,0,1,509,3045)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,64.3C5.4,64.3,-13.5,-64.3,13.5,-64.3" ed:tosuperid="408" stroke-linejoin="round" id="409"/><path transform="matrix(1,0,0,1,509,3070)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,39.3C4.7,39.3,-11.8,-39.3,13.5,-39.3" ed:tosuperid="410" stroke-linejoin="round" id="411"/><path transform="matrix(1,0,0,1,509,3095)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,14.3C0.6,14.3,-2.2,-14.3,13.5,-14.3" ed:tosuperid="414" stroke-linejoin="round" id="415"/><path transform="matrix(1,0,0,1,509,3120)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,-10.8C-0.2,-10.8,-0.4,10.8,13.5,10.8" ed:tosuperid="416" stroke-linejoin="round" id="417"/><path transform="matrix(1,0,0,1,509,3136)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,-26.3C2.9,-26.3,-7.7,26.3,13.5,26.3" ed:tosuperid="418" stroke-linejoin="round" id="419"/><path transform="matrix(1,0,0,1,509,3161)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,-51.3C5.4,-51.3,-13.4,51.3,13.5,51.3" ed:tosuperid="420" stroke-linejoin="round" id="421"/><path transform="matrix(1,0,0,1,509,3186)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,-76.3C5.4,-76.3,-13.5,76.3,13.5,76.3" ed:tosuperid="422" stroke-linejoin="round" id="423"/><path transform="matrix(1,0,0,1,509,3230)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,-120.3C5.4,-120.3,-13.5,120.3,13.5,120.3" ed:tosuperid="424" stroke-linejoin="round" id="425"/><path transform="matrix(1,0,0,1,509,3255)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,-145.3C5.4,-145.3,-13.5,145.3,13.5,145.3" ed:tosuperid="426" stroke-linejoin="round" id="427"/><path transform="matrix(1,0,0,1,509,3270)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="110" d="M-13.5,-160.8C5.4,-160.8,-13.5,160.8,13.5,160.8" ed:tosuperid="428" stroke-linejoin="round" id="429"/><path transform="matrix(1,0,0,1,561,3622)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,121.5C5.4,121.5,-13.5,-121.5,13.5,-121.5" ed:tosuperid="430" stroke-linejoin="round" id="431"/><path transform="matrix(1,0,0,1,561,3647)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,96.5C5.4,96.5,-13.5,-96.5,13.5,-96.5" ed:tosuperid="432" stroke-linejoin="round" id="433"/><path transform="matrix(1,0,0,1,561,3672)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,71.5C5.4,71.5,-13.5,-71.5,13.5,-71.5" ed:tosuperid="434" stroke-linejoin="round" id="435"/><path transform="matrix(1,0,0,1,561,3697)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,46.5C5.2,46.5,-13.1,-46.5,13.5,-46.5" ed:tosuperid="436" stroke-linejoin="round" id="437"/><path transform="matrix(1,0,0,1,561,3731)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,12C0.1,12,-1.1,-12,13.5,-12" ed:tosuperid="438" stroke-linejoin="round" id="439"/><path transform="matrix(1,0,0,1,561,3747)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,-3.5C-1.9,-3.5,3.5,3.5,13.5,3.5" ed:tosuperid="440" stroke-linejoin="round" id="441"/><path transform="matrix(1,0,0,1,561,3772)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,-28.5C3.3,-28.5,-8.5,28.5,13.5,28.5" ed:tosuperid="442" stroke-linejoin="round" id="443"/><path transform="matrix(1,0,0,1,561,3806)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,-63C5.4,-63,-13.5,63,13.5,63" ed:tosuperid="444" stroke-linejoin="round" id="445"/><path transform="matrix(1,0,0,1,561,3822)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,-78.5C5.4,-78.5,-13.5,78.5,13.5,78.5" ed:tosuperid="446" stroke-linejoin="round" id="447"/><path transform="matrix(1,0,0,1,561,3837)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,-94C5.4,-94,-13.5,94,13.5,94" ed:tosuperid="448" stroke-linejoin="round" id="449"/><path transform="matrix(1,0,0,1,561,3853)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,-109.5C5.4,-109.5,-13.5,109.5,13.5,109.5" ed:tosuperid="450" stroke-linejoin="round" id="451"/><path transform="matrix(1,0,0,1,561,3868)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,-125C5.4,-125,-13.5,125,13.5,125" ed:tosuperid="452" stroke-linejoin="round" id="453"/><path transform="matrix(1,0,0,1,561,3884)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="112" d="M-13.5,-140.5C5.4,-140.5,-13.5,140.5,13.5,140.5" ed:tosuperid="454" stroke-linejoin="round" id="455"/><path transform="matrix(1,0,0,1,500,4156)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,101.3C5.4,101.3,-13.5,-101.3,13.5,-101.3" ed:tosuperid="456" stroke-linejoin="round" id="457"/><path transform="matrix(1,0,0,1,500,4172)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,85.8C5.4,85.8,-13.5,-85.8,13.5,-85.8" ed:tosuperid="458" stroke-linejoin="round" id="459"/><path transform="matrix(1,0,0,1,500,4187)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,70.3C5.4,70.3,-13.5,-70.3,13.5,-70.3" ed:tosuperid="460" stroke-linejoin="round" id="461"/><path transform="matrix(1,0,0,1,500,4212)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,45.3C5.1,45.3,-12.9,-45.3,13.5,-45.3" ed:tosuperid="462" stroke-linejoin="round" id="463"/><path transform="matrix(1,0,0,1,500,4228)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,29.8C3.5,29.8,-9,-29.8,13.5,-29.8" ed:tosuperid="464" stroke-linejoin="round" id="465"/><path transform="matrix(1,0,0,1,500,4253)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,4.8C-1.6,4.8,2.8,-4.8,13.5,-4.8" ed:tosuperid="466" stroke-linejoin="round" id="467"/><path transform="matrix(1,0,0,1,500,4268)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,-10.8C-0.2,-10.8,-0.4,10.8,13.5,10.8" ed:tosuperid="468" stroke-linejoin="round" id="469"/><path transform="matrix(1,0,0,1,500,4293)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,-35.8C4.3,-35.8,-10.9,35.8,13.5,35.8" ed:tosuperid="470" stroke-linejoin="round" id="471"/><path transform="matrix(1,0,0,1,500,4318)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,-60.8C5.4,-60.8,-13.5,60.8,13.5,60.8" ed:tosuperid="472" stroke-linejoin="round" id="473"/><path transform="matrix(1,0,0,1,500,4343)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,-85.8C5.4,-85.8,-13.5,85.8,13.5,85.8" ed:tosuperid="474" stroke-linejoin="round" id="475"/><path transform="matrix(1,0,0,1,500,4359)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="114" d="M-13.5,-101.3C5.4,-101.3,-13.5,101.3,13.5,101.3" ed:tosuperid="476" stroke-linejoin="round" id="477"/><path transform="matrix(1,0,0,1,500,4591)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,99.5C5.4,99.5,-13.5,-99.5,13.5,-99.5" ed:tosuperid="478" stroke-linejoin="round" id="479"/><path transform="matrix(1,0,0,1,500,4606)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,84C5.4,84,-13.5,-84,13.5,-84" ed:tosuperid="480" stroke-linejoin="round" id="481"/><path transform="matrix(1,0,0,1,500,4631)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,59C5.4,59,-13.5,-59,13.5,-59" ed:tosuperid="482" stroke-linejoin="round" id="483"/><path transform="matrix(1,0,0,1,500,4666)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,24.5C2.6,24.5,-7,-24.5,13.5,-24.5" ed:tosuperid="484" stroke-linejoin="round" id="485"/><path transform="matrix(1,0,0,1,500,4681)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,9C-0.6,9,0.5,-9,13.5,-9" ed:tosuperid="487" stroke-linejoin="round" id="488"/><path transform="matrix(1,0,0,1,500,4697)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,-6.5C-1.2,-6.5,1.8,6.5,13.5,6.5" ed:tosuperid="489" stroke-linejoin="round" id="490"/><path transform="matrix(1,0,0,1,500,4712)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,-22C2.1,-22,-5.9,22,13.5,22" ed:tosuperid="491" stroke-linejoin="round" id="492"/><path transform="matrix(1,0,0,1,500,4728)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" ed:tosuperid="493" stroke-linejoin="round" id="494"/><path transform="matrix(1,0,0,1,500,4743)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,-53C5.4,-53,-13.5,53,13.5,53" ed:tosuperid="495" stroke-linejoin="round" id="496"/><path transform="matrix(1,0,0,1,500,4759)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,-68.5C5.4,-68.5,-13.5,68.5,13.5,68.5" ed:tosuperid="497" stroke-linejoin="round" id="498"/><path transform="matrix(1,0,0,1,500,4774)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,-84C5.4,-84,-13.5,84,13.5,84" ed:tosuperid="503" stroke-linejoin="round" id="504"/><path transform="matrix(1,0,0,1,500,4790)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="116" d="M-13.5,-99.5C5.4,-99.5,-13.5,99.5,13.5,99.5" ed:tosuperid="505" stroke-linejoin="round" id="506"/><path transform="matrix(1,0,0,1,525,5002)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="118" d="M-13.5,81.5C5.4,81.5,-13.5,-81.5,13.5,-81.5" ed:tosuperid="509" stroke-linejoin="round" id="510"/><path transform="matrix(1,0,0,1,525,5055)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="118" d="M-13.5,28C3.2,28,-8.3,-28,13.5,-28" ed:tosuperid="511" stroke-linejoin="round" id="512"/><path transform="matrix(1,0,0,1,525,5080)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="118" d="M-13.5,3C-2,3,3.8,-3,13.5,-3" ed:tosuperid="513" stroke-linejoin="round" id="514"/><path transform="matrix(1,0,0,1,525,5124)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="118" d="M-13.5,-41C4.8,-41,-12.2,41,13.5,41" ed:tosuperid="515" stroke-linejoin="round" id="516"/><path transform="matrix(1,0,0,1,525,5140)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="118" d="M-13.5,-56.5C5.4,-56.5,-13.5,56.5,13.5,56.5" ed:tosuperid="517" stroke-linejoin="round" id="518"/><path transform="matrix(1,0,0,1,525,5165)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="118" d="M-13.5,-81.5C5.4,-81.5,-13.5,81.5,13.5,81.5" ed:tosuperid="519" stroke-linejoin="round" id="520"/><path transform="matrix(1,0,0,1,516,5391)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,113.8C5.4,113.8,-13.5,-113.8,13.5,-113.8" ed:tosuperid="523" stroke-linejoin="round" id="524"/><path transform="matrix(1,0,0,1,516,5416)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,88.8C5.4,88.8,-13.5,-88.8,13.5,-88.8" ed:tosuperid="525" stroke-linejoin="round" id="526"/><path transform="matrix(1,0,0,1,516,5441)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,63.8C5.4,63.8,-13.5,-63.8,13.5,-63.8" ed:tosuperid="527" stroke-linejoin="round" id="528"/><path transform="matrix(1,0,0,1,516,5456)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,48.3C5.3,48.3,-13.2,-48.3,13.5,-48.3" ed:tosuperid="529" stroke-linejoin="round" id="530"/><path transform="matrix(1,0,0,1,516,5472)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,32.8C3.9,32.8,-10,-32.8,13.5,-32.8" ed:tosuperid="531" stroke-linejoin="round" id="532"/><path transform="matrix(1,0,0,1,516,5497)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,7.8C-0.9,7.8,1.2,-7.8,13.5,-7.8" ed:tosuperid="533" stroke-linejoin="round" id="534"/><path transform="matrix(1,0,0,1,516,5512)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,-7.8C-0.9,-7.8,1.2,7.8,13.5,7.8" ed:tosuperid="535" stroke-linejoin="round" id="536"/><path transform="matrix(1,0,0,1,516,5537)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,-32.8C3.9,-32.8,-10,32.8,13.5,32.8" ed:tosuperid="537" stroke-linejoin="round" id="538"/><path transform="matrix(1,0,0,1,516,5562)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,-57.8C5.4,-57.8,-13.5,57.8,13.5,57.8" ed:tosuperid="539" stroke-linejoin="round" id="540"/><path transform="matrix(1,0,0,1,516,5578)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,-73.3C5.4,-73.3,-13.5,73.3,13.5,73.3" ed:tosuperid="541" stroke-linejoin="round" id="542"/><path transform="matrix(1,0,0,1,516,5603)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,-98.3C5.4,-98.3,-13.5,98.3,13.5,98.3" ed:tosuperid="543" stroke-linejoin="round" id="544"/><path transform="matrix(1,0,0,1,516,5618)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="120" d="M-13.5,-113.8C5.4,-113.8,-13.5,113.8,13.5,113.8" ed:tosuperid="545" stroke-linejoin="round" id="546"/><path transform="matrix(1,0,0,1,548,5816)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="122" d="M-13.5,53C5.4,53,-13.5,-53,13.5,-53" ed:tosuperid="547" stroke-linejoin="round" id="548"/><path transform="matrix(1,0,0,1,548,5832)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="122" d="M-13.5,37.5C4.5,37.5,-11.4,-37.5,13.5,-37.5" ed:tosuperid="549" stroke-linejoin="round" id="550"/><path transform="matrix(1,0,0,1,548,5847)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="122" d="M-13.5,22C2.1,22,-5.9,-22,13.5,-22" ed:tosuperid="551" stroke-linejoin="round" id="552"/><path transform="matrix(1,0,0,1,548,5863)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="122" d="M-13.5,6.5C-1.2,6.5,1.8,-6.5,13.5,-6.5" ed:tosuperid="553" stroke-linejoin="round" id="554"/><path transform="matrix(1,0,0,1,548,5907)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="122" d="M-13.5,-37.5C4.5,-37.5,-11.4,37.5,13.5,37.5" ed:tosuperid="555" stroke-linejoin="round" id="556"/><path transform="matrix(1,0,0,1,548,5922)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="122" d="M-13.5,-53C5.4,-53,-13.5,53,13.5,53" ed:tosuperid="557" stroke-linejoin="round" id="558"/><path transform="matrix(1,0,0,1,530,6070)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="124" d="M-13.5,26.3C2.9,26.3,-7.7,-26.3,13.5,-26.3" ed:tosuperid="559" stroke-linejoin="round" id="560"/><path transform="matrix(1,0,0,1,530,6086)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="124" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" ed:tosuperid="561" stroke-linejoin="round" id="562"/><path transform="matrix(1,0,0,1,530,6101)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="124" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" ed:tosuperid="563" stroke-linejoin="round" id="564"/><path transform="matrix(1,0,0,1,530,6117)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="124" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" ed:tosuperid="565" stroke-linejoin="round" id="566"/><path transform="matrix(1,0,0,1,530,6142)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="124" d="M-13.5,-45.3C5.1,-45.3,-12.9,45.3,13.5,45.3" ed:tosuperid="567" stroke-linejoin="round" id="568"/><path transform="matrix(1,0,0,1,529,6248)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="126" d="M-13.5,10.8C-0.2,10.8,-0.4,-10.8,13.5,-10.8" ed:tosuperid="571" stroke-linejoin="round" id="572"/><path transform="matrix(1,0,0,1,529,6263)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="126" d="M-13.5,-4.8C-1.6,-4.8,2.8,4.8,13.5,4.8" ed:tosuperid="573" stroke-linejoin="round" id="574"/><path transform="matrix(1,0,0,1,529,6279)" stroke="#696969" stroke-linecap="round" fill="none" ed:parentid="126" d="M-13.5,-20.3C1.8,-20.3,-5.1,20.3,13.5,20.3" ed:tosuperid="575" stroke-linejoin="round" id="576"/><g transform="matrix(1,0,0,1,23,3298)" ed:layout="rightmap" ed:topictype="mainidea" id="101" ed:height="57" ed:width="238"><path fill="#435fbc" stroke="#435fbc" d="M4,0L234,0C236.7,0,238,1.3,238,4L238,53C238,55.7,236.7,57,234,57L4,57C1.3,57,0,55.7,0,53L0,4C0,1.3,1.3,0,4,0z" stroke-linejoin="round" stroke-width="3"/><text class="st1"><tspan style="white-space:pre" y="34.5" x="21">《数据分析实战45讲》</tspan></text></g><g transform="matrix(1,0,0,1,324,1392)" ed:parentid="101" id="102" ed:height="37" ed:width="87"><path fill="#ebecf3" stroke="#ebecf3" d="M4,0L83,0C85.7,0,87,1.3,87,4L87,33C87,35.7,85.7,37,83,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke-linejoin="round"/><text class="st2"><tspan style="white-space:pre" y="23.4" x="18">基础篇</tspan></text></g><g transform="matrix(1,0,0,1,324,4513)" ed:parentid="101" id="104" ed:height="37" ed:width="87"><path fill="#ebecf3" stroke="#ebecf3" d="M4,0L83,0C85.7,0,87,1.3,87,4L87,33C87,35.7,85.7,37,83,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke-linejoin="round"/><text class="st2"><tspan style="white-space:pre" y="23.4" x="18">算法篇</tspan></text></g><g transform="matrix(1,0,0,1,324,6372)" ed:parentid="101" id="106" ed:height="37" ed:width="87"><path fill="#ebecf3" stroke="#ebecf3" d="M4,0L83,0C85.7,0,87,1.3,87,4L87,33C87,35.7,85.7,37,83,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke-linejoin="round"/><text class="st2"><tspan style="white-space:pre" y="23.4" x="18">实战篇</tspan></text></g><g transform="matrix(1,0,0,1,324,6538)" ed:parentid="101" id="108" ed:height="37" ed:width="87"><path fill="#ebecf3" stroke="#ebecf3" d="M4,0L83,0C85.7,0,87,1.3,87,4L87,33C87,35.7,85.7,37,83,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke-linejoin="round"/><text class="st2"><tspan style="white-space:pre" y="23.4" x="18">工作篇</tspan></text></g><g transform="matrix(1,0,0,1,438,3085)" ed:parentid="104" id="110" ed:height="24.5" ed:width="57"><path stroke="#696969" fill="none" d="M0,24.5L57,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">决策树</tspan></text></g><g transform="matrix(1,0,0,1,438,3719)" ed:parentid="104" id="112" ed:height="24.5" ed:width="109"><path stroke="#696969" fill="none" d="M0,24.5L109,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">朴素贝叶斯分类</tspan></text></g><g transform="matrix(1,0,0,1,438,4233)" ed:parentid="104" id="114" ed:height="24.5" ed:width="48"><path stroke="#696969" fill="none" d="M0,24.5L48,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">SVM</tspan></text></g><g transform="matrix(1,0,0,1,438,4666)" ed:parentid="104" id="116" ed:height="24.5" ed:width="48"><path stroke="#696969" fill="none" d="M0,24.5L48,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">KNN</tspan></text></g><g transform="matrix(1,0,0,1,438,5059)" ed:parentid="104" id="118" ed:height="24.5" ed:width="73"><path stroke="#696969" fill="none" d="M0,24.5L73,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">K-Means</tspan></text></g><g transform="matrix(1,0,0,1,438,5480)" ed:parentid="104" id="120" ed:height="24.5" ed:width="64"><path stroke="#696969" fill="none" d="M0,24.5L64,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">EM聚类</tspan></text></g><g transform="matrix(1,0,0,1,438,5845)" ed:parentid="104" id="122" ed:height="24.5" ed:width="96"><path stroke="#696969" fill="none" d="M0,24.5L96,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">关联规则挖掘</tspan></text></g><g transform="matrix(1,0,0,1,438,6072)" ed:parentid="104" id="124" ed:height="24.5" ed:width="78"><path stroke="#696969" fill="none" d="M0,24.5L78,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">PageRank</tspan></text></g><g transform="matrix(1,0,0,1,438,6234)" ed:parentid="104" id="126" ed:height="24.5" ed:width="77"><path stroke="#696969" fill="none" d="M0,24.5L77,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">AdaBoost</tspan></text></g><g transform="matrix(1,0,0,1,438,138)" ed:parentid="102" id="128" ed:height="24.5" ed:width="57"><path stroke="#696969" fill="none" d="M0,24.5L57,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">全景图</tspan></text></g><g transform="matrix(1,0,0,1,438,284)" ed:parentid="102" id="130" ed:height="24.5" ed:width="70"><path stroke="#696969" fill="none" d="M0,24.5L70,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">最佳路径</tspan></text></g><g transform="matrix(1,0,0,1,438,400)" ed:parentid="102" id="132" ed:height="24.5" ed:width="70"><path stroke="#696969" fill="none" d="M0,24.5L70,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">基础语法</tspan></text></g><g transform="matrix(1,0,0,1,438,658)" ed:parentid="102" id="134" ed:height="24.5" ed:width="186"><path stroke="#696969" fill="none" d="M0,24.5L186,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">科学计算：Numpy与Pandas</tspan></text></g><g transform="matrix(1,0,0,1,438,976)" ed:parentid="102" id="136" ed:height="24.5" ed:width="96"><path stroke="#696969" fill="none" d="M0,24.5L96,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">掌握基本概念</tspan></text></g><g transform="matrix(1,0,0,1,438,1211)" ed:parentid="102" id="138" ed:height="24.5" ed:width="70"><path stroke="#696969" fill="none" d="M0,24.5L70,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">用户画像</tspan></text></g><g transform="matrix(1,0,0,1,438,1492)" ed:parentid="102" id="140" ed:height="24.5" ed:width="70"><path stroke="#696969" fill="none" d="M0,24.5L70,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据采集</tspan></text></g><g transform="matrix(1,0,0,1,438,1644)" ed:parentid="102" id="142" ed:height="24.5" ed:width="88"><path stroke="#696969" fill="none" d="M0,24.5L88,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">Python爬虫</tspan></text></g><g transform="matrix(1,0,0,1,438,1787)" ed:parentid="102" id="144" ed:height="24.5" ed:width="70"><path stroke="#696969" fill="none" d="M0,24.5L70,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">清洗任务</tspan></text></g><g transform="matrix(1,0,0,1,438,2074)" ed:parentid="102" id="146" ed:height="24.5" ed:width="70"><path stroke="#696969" fill="none" d="M0,24.5L70,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据集成</tspan></text></g><g transform="matrix(1,0,0,1,438,2359)" ed:parentid="102" id="148" ed:height="24.5" ed:width="70"><path stroke="#696969" fill="none" d="M0,24.5L70,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据变换</tspan></text></g><g transform="matrix(1,0,0,1,438,2603)" ed:parentid="102" id="150" ed:height="24.5" ed:width="83"><path stroke="#696969" fill="none" d="M0,24.5L83,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据可视化</tspan></text></g><g transform="matrix(1,0,0,1,438,6483)" ed:parentid="108" id="152" ed:height="24.5" ed:width="122"><path stroke="#696969" fill="none" d="M0,24.5L122,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">培养数据分析思维</tspan></text></g><g transform="matrix(1,0,0,1,438,6514)" ed:parentid="108" id="154" ed:height="24.5" ed:width="96"><path stroke="#696969" fill="none" d="M0,24.5L96,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">获取项目经验</tspan></text></g><g transform="matrix(1,0,0,1,438,6576)" ed:parentid="108" id="156" ed:height="24.5" ed:width="109"><path stroke="#696969" fill="none" d="M0,24.5L109,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">重视思维和实战</tspan></text></g><g transform="matrix(1,0,0,1,324,21)" ed:parentid="101" id="186" ed:height="37" ed:width="87"><path fill="#ebecf3" stroke="#ebecf3" d="M4,0L83,0C85.7,0,87,1.3,87,4L87,33C87,35.7,85.7,37,83,37L4,37C1.3,37,0,35.7,0,33L0,4C0,1.3,1.3,0,4,0z" stroke-linejoin="round"/><text class="st2"><tspan style="white-space:pre" y="23.4" x="18">开篇词</tspan></text></g><g transform="matrix(1,0,0,1,438,27)" ed:parentid="186" id="188" ed:height="24.5" ed:width="460"><path stroke="#696969" fill="none" d="M0,24.5L460,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">学习数据分析的核心就是培养数据思维，掌握挖掘工具，熟练实践并积累经验</tspan></text></g><g transform="matrix(1,0,0,1,522,91)" ed:parentid="128" id="190" ed:height="24.5" ed:width="484"><path stroke="#696969" fill="none" d="M0,24.5L484,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据分析分成三个重要的组成部分：1、数据采集；2、数据挖掘；3、数据可视化</tspan></text></g><g transform="matrix(1,0,0,1,522,122)" ed:parentid="128" id="192" ed:height="24.5" ed:width="426"><path stroke="#696969" fill="none" d="M0,24.5L426,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据可视化有两种方法：一种是使用Python；另一种是使用第三方工具</tspan></text></g><g transform="matrix(1,0,0,1,522,153)" ed:parentid="128" id="194" ed:height="24.5" ed:width="421"><path stroke="#696969" fill="none" d="M0,24.5L421,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">学习数据分析最好的方法是：在工具中灵活运用，在项目中加深理解。</tspan></text></g><g transform="matrix(1,0,0,1,522,184)" ed:parentid="128" id="196" ed:height="24.5" ed:width="307"><path stroke="#696969" fill="none" d="M0,24.5L307,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">两点原则：1、不重复造轮子；2、工具决定效率；</tspan></text></g><g transform="matrix(1,0,0,1,535,215)" ed:parentid="130" id="198" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据挖掘的过程可以分成以下 6 个步骤：1、商业理解；2、数据理解；3、数据准备；</tspan><tspan style="white-space:pre" y="35.1" x="8">4、模型建立；5、模型评估；6、上线分布；</tspan></text></g><g transform="matrix(1,0,0,1,535,265)" ed:parentid="130" id="200" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">十大经典算法：分类算法：C4.5，朴素贝叶斯（Naive Bayes），SVM，KNN，</tspan><tspan style="white-space:pre" y="35.1" x="8">Adaboost，CART；聚类算法：K-Means，EM；关联分析：Apriori；连接分析：</tspan><tspan style="white-space:pre" y="54.1" x="8">PageRank</tspan></text></g><g transform="matrix(1,0,0,1,535,334)" ed:parentid="130" id="202" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据挖掘的数学原理：1、概率论和数理统计；2、线性代数；3、图论；4、最优化方</tspan><tspan style="white-space:pre" y="35.1" x="8">法</tspan></text></g><g transform="matrix(1,0,0,1,535,384)" ed:parentid="132" id="204" ed:height="24.5" ed:width="333"><path stroke="#696969" fill="none" d="M0,24.5L333,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">千万不要忽视 Python2.7，它的寿命远不止到 2020 年</tspan></text></g><g transform="matrix(1,0,0,1,535,415)" ed:parentid="132" id="206" ed:height="24.5" ed:width="213"><path stroke="#696969" fill="none" d="M0,24.5L213,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">代码缩进在 Python 中是一种语法</tspan></text></g><g transform="matrix(1,0,0,1,651,446)" ed:parentid="134" id="208" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">列表 list 的元素在系统内存中是分散存储的，而 NumPy 数组存储在一个均匀连续的内</tspan><tspan style="white-space:pre" y="35.1" x="8">存块中</tspan></text></g><g transform="matrix(1,0,0,1,651,496)" ed:parentid="134" id="210" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">一些技巧来提升内存和提高计算资源的利用率。一个重要的规则就是：避免采用隐式拷</tspan><tspan style="white-space:pre" y="35.1" x="8">贝，而是采用就地操作的方式</tspan></text></g><g transform="matrix(1,0,0,1,651,546)" ed:parentid="134" id="212" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">NumPy 里有两个重要的对象：ndarray（N-dimensional array object）解决了多维</tspan><tspan style="white-space:pre" y="35.1" x="8">数组问题，而 ufunc（universal function object）则是解决对数组进行处理的函数</tspan></text></g><g transform="matrix(1,0,0,1,651,596)" ed:parentid="134" id="214" ed:height="24.5" ed:width="484"><path stroke="#696969" fill="none" d="M0,24.5L484,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">Pandas 可以说是基于 NumPy 构建的含有更高级数据结构和分析能力的工具包。</tspan></text></g><g transform="matrix(1,0,0,1,651,627)" ed:parentid="134" id="216" ed:height="24.5" ed:width="263"><path stroke="#696969" fill="none" d="M0,24.5L263,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">Series 和 DataFrame 这两个核心数据结构</tspan></text></g><g transform="matrix(1,0,0,1,651,658)" ed:parentid="134" id="218" ed:height="24.5" ed:width="352"><path stroke="#696969" fill="none" d="M0,24.5L352,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">Pandas 可以对数据进行导入、清洗、处理、统计和输出。</tspan></text></g><g transform="matrix(1,0,0,1,651,689)" ed:parentid="134" id="220" ed:height="24.5" ed:width="437"><path stroke="#696969" fill="none" d="M0,24.5L437,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">Series 是个定长的字典序列；Series 有两个基本属性：index 和 values；</tspan></text></g><g transform="matrix(1,0,0,1,651,720)" ed:parentid="134" id="222" ed:height="24.5" ed:width="245"><path stroke="#696969" fill="none" d="M0,24.5L245,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">DataFrame 类型数据结构类似数据库表</tspan></text></g><g transform="matrix(1,0,0,1,651,751)" ed:parentid="134" id="224" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">在数据清洗过程中，一般都会遇到以下这几种情况：1. 删除 DataFrame 中的不必要的</tspan><tspan style="white-space:pre" y="35.1" x="8">列或行；2. 重命名列名 columns，让列表名更容易识别；3. 去重复的值；4. 格式问题</tspan><tspan style="white-space:pre" y="54.1" x="8">（更改数据格式、数据间的空格、大小写转换、查找空值）</tspan></text></g><g transform="matrix(1,0,0,1,651,820)" ed:parentid="134" id="226" ed:height="24.5" ed:width="406"><path stroke="#696969" fill="none" d="M0,24.5L406,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">apply 函数是 Pandas 中自由度非常高的函数，使用频率也非常高。</tspan></text></g><g transform="matrix(1,0,0,1,651,851)" ed:parentid="134" id="228" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">Pandas 的 DataFrame 数据类型可以让我们像处理数据表一样进行操作，比如数据表</tspan><tspan style="white-space:pre" y="35.1" x="8">的增删改查</tspan></text></g><g transform="matrix(1,0,0,1,561,901)" ed:parentid="136" id="230" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">商业智能 BI、数据仓库 DW、数据挖掘 DM 三者之间的关系：百货商店利用数据预测</tspan><tspan style="white-space:pre" y="35.1" x="8">用户购物行为属于商业智能，他们积累的顾客的消费行为习惯会存储在数据仓库中，通</tspan><tspan style="white-space:pre" y="54.1" x="8">过对个体进行消费行为分析总结出来的规律属于数据挖掘。</tspan></text></g><g transform="matrix(1,0,0,1,561,970)" ed:parentid="136" id="232" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">元数据（MetaData）：描述其它数据的数据，也称为“中介数据”；数据元（Data </tspan><tspan style="white-space:pre" y="35.1" x="8">Element）：就是最小数据单元。</tspan></text></g><g transform="matrix(1,0,0,1,561,1020)" ed:parentid="136" id="234" ed:height="24.5" ed:width="434"><path stroke="#696969" fill="none" d="M0,24.5L434,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据挖掘中，有几个非常重要的任务，就是分类、聚类、预测和关联分析</tspan></text></g><g transform="matrix(1,0,0,1,561,1051)" ed:parentid="136" id="236" ed:height="24.5" ed:width="382"><path stroke="#696969" fill="none" d="M0,24.5L382,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">对数据进行几个处理步骤：数据清洗，数据集成，以及数据变换</tspan></text></g><g transform="matrix(1,0,0,1,535,1082)" ed:parentid="138" id="238" ed:height="24.5" ed:width="187"><path stroke="#696969" fill="none" d="M0,24.5L187,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">精细化运营将是长久的主题。</tspan></text></g><g transform="matrix(1,0,0,1,535,1113)" ed:parentid="138" id="240" ed:height="81.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,81.5L514,81.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">要解决三个问题：1、用户从哪里来，这里我们需要统一标识用户 ID，方便我们对用户</tspan><tspan style="white-space:pre" y="35.1" x="8">后续行为进行跟踪；2、需要对这些用户进行标签化，方便我们对用户行为进行理解；</tspan><tspan style="white-space:pre" y="54.1" x="8">3、要将这些用户画像与我们的业务相关联，提升我们的转化率，或者降低我们的流失</tspan><tspan style="white-space:pre" y="73.1" x="8">率</tspan></text></g><g transform="matrix(1,0,0,1,535,1201)" ed:parentid="138" id="242" ed:height="24.5" ed:width="369"><path stroke="#696969" fill="none" d="M0,24.5L369,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">用户唯一标识是整个用户画像的核心，其次就是给用户打标签</tspan></text></g><g transform="matrix(1,0,0,1,535,1232)" ed:parentid="138" id="244" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">从用户生命周期的三个阶段来划分业务价值，包括：获客、粘客和留客。1、获客：如</tspan><tspan style="white-space:pre" y="35.1" x="8">何进行拉新，通过更精准的营销获取客户；2、粘客：个性化推荐，搜索排序，场景运</tspan><tspan style="white-space:pre" y="54.1" x="8">营等；3、留客：流失率预测，分析关键节点降低流失率。</tspan></text></g><g transform="matrix(1,0,0,1,535,1301)" ed:parentid="138" id="246" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">按照数据流处理的阶段来划分用户画像建模的过程，可以分为数据层、算法层和业务</tspan><tspan style="white-space:pre" y="35.1" x="8">层。1、数据层指的是用户消费行为里的标签；2、算法层指的是透过这些行为算出的</tspan><tspan style="white-space:pre" y="54.1" x="8">用户建模；3、业务层指的是获客、粘客、留客的手段</tspan></text></g><g transform="matrix(1,0,0,1,535,1370)" ed:parentid="140" id="248" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">需要通过多源的数据采集，收集到尽可能多的数据维度，同时保证数据的质量，这样才</tspan><tspan style="white-space:pre" y="35.1" x="8">能得到高质量的数据挖掘结果。</tspan></text></g><g transform="matrix(1,0,0,1,535,1420)" ed:parentid="140" id="250" ed:height="24.5" ed:width="382"><path stroke="#696969" fill="none" d="M0,24.5L382,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">四类数据源包括了：开放数据源、爬虫抓取、传感器和日志采集</tspan></text></g><g transform="matrix(1,0,0,1,535,1451)" ed:parentid="140" id="252" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8"> Python 爬虫中，基本上会经历三个过程：1、使用 Requests 爬取内容；2、使用 </tspan><tspan style="white-space:pre" y="35.1" x="8">XPath 解析内容；3、使用 Pandas 保存数据。</tspan></text></g><g transform="matrix(1,0,0,1,535,1501)" ed:parentid="140" id="254" ed:height="24.5" ed:width="317"><path stroke="#696969" fill="none" d="M0,24.5L317,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">三款常用的抓取工具：火车采集器、八爪鱼、集搜客</tspan></text></g><g transform="matrix(1,0,0,1,535,1532)" ed:parentid="140" id="258" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">日志采集最大的作用，就是通过分析用户访问情况，提升系统的性能，从而提高系统承</tspan><tspan style="white-space:pre" y="35.1" x="8">载量。</tspan></text></g><g transform="matrix(1,0,0,1,535,1582)" ed:parentid="140" id="260" ed:height="24.5" ed:width="465"><path stroke="#696969" fill="none" d="M0,24.5L465,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">日志采集可以分两种形式：1、通过Web服务器采集；2、自定义采集用户行为</tspan></text></g><g transform="matrix(1,0,0,1,535,1613)" ed:parentid="140" id="262" ed:height="24.5" ed:width="317"><path stroke="#696969" fill="none" d="M0,24.5L317,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">埋点就是在有需要的位置采集相应的信息，进行上报</tspan></text></g><g transform="matrix(1,0,0,1,553,1644)" ed:parentid="142" id="264" ed:height="24.5" ed:width="364"><path stroke="#696969" fill="none" d="M0,24.5L364,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">工具的使用：Requests 访问页面；XPath 定位；JSON 对象</tspan></text></g><g transform="matrix(1,0,0,1,535,1675)" ed:parentid="144" id="266" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">好的数据分析师必定是一名数据清洗高手，要知道在整个数据分析过程中，不论是在时</tspan><tspan style="white-space:pre" y="35.1" x="8">间还是功夫上，数据清洗大概都占到了 80%。</tspan></text></g><g transform="matrix(1,0,0,1,535,1725)" ed:parentid="144" id="268" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据清洗规则总结为以下 4 个关键点，统一起来叫“完全合一”，即完整性、全面</tspan><tspan style="white-space:pre" y="35.1" x="8">性、合法性、唯一性</tspan></text></g><g transform="matrix(1,0,0,1,535,1775)" ed:parentid="144" id="270" ed:height="24.5" ed:width="250"><path stroke="#696969" fill="none" d="M0,24.5L250,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">完整性：问题 1：缺失值、问题 2：空行</tspan></text></g><g transform="matrix(1,0,0,1,535,1806)" ed:parentid="144" id="272" ed:height="24.5" ed:width="226"><path stroke="#696969" fill="none" d="M0,24.5L226,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">全面性：问题：列数据的单位不统一</tspan></text></g><g transform="matrix(1,0,0,1,535,1837)" ed:parentid="144" id="274" ed:height="24.5" ed:width="190"><path stroke="#696969" fill="none" d="M0,24.5L190,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">合理性：问题：非 ASCII 字符</tspan></text></g><g transform="matrix(1,0,0,1,535,1868)" ed:parentid="144" id="276" ed:height="24.5" ed:width="328"><path stroke="#696969" fill="none" d="M0,24.5L328,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">唯一性：问题 1：一列有多个参数、问题 2：重复数据</tspan></text></g><g transform="matrix(1,0,0,1,535,1899)" ed:parentid="144" id="278" ed:height="24.5" ed:width="512"><path stroke="#696969" fill="none" d="M0,24.5L512,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">没有高质量的数据，就没有高质量的数据挖掘，而数据清洗是高质量数据的一道保障。</tspan></text></g><g transform="matrix(1,0,0,1,535,1930)" ed:parentid="146" id="280" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">ETL 是英文 Extract、Transform 和 Load 的缩写，顾名思义它包括了数据抽取、转</tspan><tspan style="white-space:pre" y="35.1" x="8">换、加载三个过程。</tspan></text></g><g transform="matrix(1,0,0,1,535,1980)" ed:parentid="146" id="282" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">ETL 的过程为提取 (Extract)——转换 (Transform)——加载 (Load)，在数据源抽取后</tspan><tspan style="white-space:pre" y="35.1" x="8">首先进行转换，然后将转换的结果写入目的地。</tspan></text></g><g transform="matrix(1,0,0,1,535,2030)" ed:parentid="146" id="284" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">ELT 的过程则是提取 (Extract)——加载 (Load)——变换 (Transform)，在抽取后将结</tspan><tspan style="white-space:pre" y="35.1" x="8">果先写入目的地，然后利用数据库的聚合分析能力或者外部计算框架</tspan></text></g><g transform="matrix(1,0,0,1,535,2080)" ed:parentid="146" id="286" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">ELT 和 ETL 相比，最大的区别是“重抽取和加载，轻转换”，从而可以用更轻量的方案</tspan><tspan style="white-space:pre" y="35.1" x="8">搭建起一个数据集成平台。</tspan></text></g><g transform="matrix(1,0,0,1,535,2130)" ed:parentid="146" id="288" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">在 ELT 架构中，数据变换这个过程根据后续使用的情况，需要在 SQL 中进行，而不是</tspan><tspan style="white-space:pre" y="35.1" x="8">在加载阶段进行。</tspan></text></g><g transform="matrix(1,0,0,1,535,2180)" ed:parentid="146" id="290" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">典型的 ETL 工具有：商业软件（Informatica PowerCenter、IBM InfoSphere </tspan><tspan style="white-space:pre" y="35.1" x="8">DataStage、Oracle Data Integrator、Microsoft SQL Server Integration Services </tspan><tspan style="white-space:pre" y="54.1" x="8">等）；开源软件：Kettle、Talend、Apatar、Scriptella、DataX、Sqoop 等</tspan></text></g><g transform="matrix(1,0,0,1,535,2249)" ed:parentid="148" id="292" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据变换是数据准备的重要环节，它通过数据平滑、数据聚集、数据概化和规范化等方</tspan><tspan style="white-space:pre" y="35.1" x="8">式将数据转换成适用于数据挖掘的形式。</tspan></text></g><g transform="matrix(1,0,0,1,535,2299)" ed:parentid="148" id="294" ed:height="81.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,81.5L514,81.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">常见的变换方法：1、数据平滑（去除数据中的噪声，将连续数据离散化）；2、数据</tspan><tspan style="white-space:pre" y="35.1" x="8">聚集（对数据进行汇总）；3、数据概化（将数据由较低的概念抽象成为较高的概念，</tspan><tspan style="white-space:pre" y="54.1" x="8">减少数据复杂度）；4、数据规范化（使属性数据按比例缩放，这样就将原来的数值映</tspan><tspan style="white-space:pre" y="73.1" x="8">射到一个新的特定区域中）；5、属性构造（构造出新的属性并添加到属性集中）</tspan></text></g><g transform="matrix(1,0,0,1,535,2387)" ed:parentid="148" id="296" ed:height="24.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,24.5L514,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据规范化的几种方法：1. Min-max 规范化；2. Z-Score 规范化；3. 小数定标规范化</tspan></text></g><g transform="matrix(1,0,0,1,535,2418)" ed:parentid="148" id="298" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">SciKit-Learn 是 Python 的重要机器学习库，它帮我们封装了大量的机器学习算法，比</tspan><tspan style="white-space:pre" y="35.1" x="8">如分类、聚类、回归、降维等。</tspan></text></g><g transform="matrix(1,0,0,1,535,2468)" ed:parentid="148" id="300" ed:height="24.5" ed:width="239"><path stroke="#696969" fill="none" d="M0,24.5L239,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据挖掘中数据变换比算法选择更重要</tspan></text></g><g transform="matrix(1,0,0,1,548,2499)" ed:parentid="150" id="302" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">常用的可视化视图超过 20 种，分别包括：文本表、热力图、地图、符号地图、饼图、</tspan><tspan style="white-space:pre" y="35.1" x="8">水平条、堆叠条、并排条、树状图、圆视图、并排圆、线、双线、面积图、双组合、散</tspan><tspan style="white-space:pre" y="54.1" x="8">点图、直方图、盒须图、甘特图、靶心图、气泡图等。</tspan></text></g><g transform="matrix(1,0,0,1,548,2568)" ed:parentid="150" id="304" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">用它们背后的目的：分布、时间相关、局部/整体、偏差、相关性、排名、量级、地</tspan><tspan style="white-space:pre" y="35.1" x="8">图、流动</tspan></text></g><g transform="matrix(1,0,0,1,548,2618)" ed:parentid="150" id="306" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据可视化工具：最著名的当属 Tableau 和 PowerBI ；另外 FineBI 是中国的帆软出</tspan><tspan style="white-space:pre" y="35.1" x="8">品，针对国内使用更加友好；两款可视化大屏的软件 DataV 和 FineReport；DataV 是</tspan><tspan style="white-space:pre" y="54.1" x="8">一款可视化的工具，天猫双十一大屏就是用它呈现的；</tspan></text></g><g transform="matrix(1,0,0,1,548,2687)" ed:parentid="150" id="308" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">全面的学习数据可视化，有以下的 3 个路径：1. 重点推荐 Tableau；2.  使用微图、</tspan><tspan style="white-space:pre" y="35.1" x="8">DataV；3. Python 可视化</tspan></text></g><g transform="matrix(1,0,0,1,438,6332)" ed:parentid="106" id="310" ed:height="24.5" ed:width="226"><path stroke="#696969" fill="none" d="M0,24.5L226,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据采集实战：如何自动化运营微博</tspan></text></g><g transform="matrix(1,0,0,1,438,6363)" ed:parentid="106" id="312" ed:height="24.5" ed:width="304"><path stroke="#696969" fill="none" d="M0,24.5L304,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据可视化实战：如何给毛不易的歌曲做词云展示</tspan></text></g><g transform="matrix(1,0,0,1,438,6394)" ed:parentid="106" id="314" ed:height="24.5" ed:width="447"><path stroke="#696969" fill="none" d="M0,24.5L447,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">数据挖掘实战：信用卡违约率分析、信用卡诈骗分析、比特币走势进行预测</tspan></text></g><g transform="matrix(1,0,0,1,438,6425)" ed:parentid="106" id="316" ed:height="24.5" ed:width="350"><path stroke="#696969" fill="none" d="M0,24.5L350,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">深度学习：如何用Keras搭建深度学习网络做手写数字识别</tspan></text></g><g transform="matrix(1,0,0,1,587,6483)" ed:parentid="152" id="318" ed:height="24.5" ed:width="278"><path stroke="#696969" fill="none" d="M0,24.5L278,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">提问是最好的老师；学会分享是最快的成长；</tspan></text></g><g transform="matrix(1,0,0,1,561,6514)" ed:parentid="154" id="320" ed:height="24.5" ed:width="293"><path stroke="#696969" fill="none" d="M0,24.5L293,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">9个项目实例：https://github.com/cystanford</tspan></text></g><g transform="matrix(1,0,0,1,574,6545)" ed:parentid="156" id="322" ed:height="24.5" ed:width="161"><path stroke="#696969" fill="none" d="M0,24.5L161,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">理论到处有，实战最重要</tspan></text></g><g transform="matrix(1,0,0,1,574,6576)" ed:parentid="156" id="324" ed:height="24.5" ed:width="447"><path stroke="#696969" fill="none" d="M0,24.5L447,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">方法比努力更重要：不是单向地被动接受知识和工具，更要建立思考和连接</tspan></text></g><g transform="matrix(1,0,0,1,574,6607)" ed:parentid="156" id="326" ed:height="24.5" ed:width="135"><path stroke="#696969" fill="none" d="M0,24.5L135,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">投入越多，收获越多</tspan></text></g><g transform="matrix(1,0,0,1,522,2764)" ed:parentid="110" id="396" ed:height="24.5" ed:width="278"><path stroke="#696969" fill="none" d="M0,24.5L278,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">决策树基本上就是把我们以前的经验总结出来</tspan></text></g><g transform="matrix(1,0,0,1,522,2795)" ed:parentid="110" id="398" ed:height="24.5" ed:width="304"><path stroke="#696969" fill="none" d="M0,24.5L304,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">做决策树的时候，会经历两个阶段：构造和剪枝。</tspan></text></g><g transform="matrix(1,0,0,1,522,2826)" ed:parentid="110" id="400" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">剪枝就是给决策树瘦身，这一步想实现的目标就是，不需要太多的判断，同样可以得到</tspan><tspan style="white-space:pre" y="35.1" x="8">不错的结果。</tspan></text></g><g transform="matrix(1,0,0,1,522,2876)" ed:parentid="110" id="402" ed:height="24.5" ed:width="174"><path stroke="#696969" fill="none" d="M0,24.5L174,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">两个指标：纯度和信息熵。</tspan></text></g><g transform="matrix(1,0,0,1,522,2907)" ed:parentid="110" id="406" ed:height="24.5" ed:width="339"><path stroke="#696969" fill="none" d="M0,24.5L339,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">信息熵（entropy）的概念，它表示了信息的不确定度。</tspan></text></g><g transform="matrix(1,0,0,1,522,2938)" ed:parentid="110" id="408" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">经典的 “不纯度”的指标有三种，分别是信息增益（ID3 算法）、信息增益率（C4.5 </tspan><tspan style="white-space:pre" y="35.1" x="8">算法）以及基尼指数（Cart 算法）。</tspan></text></g><g transform="matrix(1,0,0,1,522,2988)" ed:parentid="110" id="410" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">C4.5 都在哪些方面改进了 ID3：1. 采用信息增益率；2. 采用悲观剪枝；3. 离散化处理</tspan><tspan style="white-space:pre" y="35.1" x="8">连续属性；4. 处理缺失值</tspan></text></g><g transform="matrix(1,0,0,1,522,3038)" ed:parentid="110" id="414" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">基于信息度量的不同方式，我们可以把决策树分为 ID3 算法、C4.5 算法和 CART 算</tspan><tspan style="white-space:pre" y="35.1" x="8">法。</tspan></text></g><g transform="matrix(1,0,0,1,522,3088)" ed:parentid="110" id="416" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">CART 算法，英文全称叫做 Classification And Regression Tree，中文叫做分类回归</tspan><tspan style="white-space:pre" y="35.1" x="8">树</tspan></text></g><g transform="matrix(1,0,0,1,522,3138)" ed:parentid="110" id="418" ed:height="24.5" ed:width="420"><path stroke="#696969" fill="none" d="M0,24.5L420,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">ID3 和 C4.5 算法可以生成二叉树或多叉树，而 CART 只支持二叉树。</tspan></text></g><g transform="matrix(1,0,0,1,522,3169)" ed:parentid="110" id="420" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">CART 回归树划分数据集的过程和分类树的过程是一样的，只是回归树得到的预测结果</tspan><tspan style="white-space:pre" y="35.1" x="8">是连续值，而且评判“不纯度”的指标不同。</tspan></text></g><g transform="matrix(1,0,0,1,522,3219)" ed:parentid="110" id="422" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">作为分类树，CART 采用基尼系数作为节点划分的依据，得到的是离散的结果，也就是</tspan><tspan style="white-space:pre" y="35.1" x="8">分类结果；</tspan></text></g><g transform="matrix(1,0,0,1,522,3269)" ed:parentid="110" id="424" ed:height="81.5" ed:width="432"><path stroke="#696969" fill="none" d="M0,81.5L432,81.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">三种决策树之间在属性选择标准上的差异：</tspan><tspan style="white-space:pre" y="35.1" x="8">ID3 算法，基于信息增益做判断；</tspan><tspan style="white-space:pre" y="54.1" x="8">C4.5 算法，基于信息增益率做判断；</tspan><tspan style="white-space:pre" y="73.1" x="8">CART 算法，分类树是基于基尼系数做判断。回归树是基于偏差做判断。</tspan></text></g><g transform="matrix(1,0,0,1,522,3357)" ed:parentid="110" id="426" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">决策树分类的应用场景非常广泛：在金融行业可以用决策树做贷款风险评估，医疗行业</tspan><tspan style="white-space:pre" y="35.1" x="8">可以用决策树生成辅助诊断，电商行业可以用决策树对销售额进行预测等。</tspan></text></g><g transform="matrix(1,0,0,1,522,3407)" ed:parentid="110" id="428" ed:height="24.5" ed:width="335"><path stroke="#696969" fill="none" d="M0,24.5L335,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8"> sklearn 中自带的决策树分类器 DecisionTreeClassifier</tspan></text></g><g transform="matrix(1,0,0,1,574,3438)" ed:parentid="112" id="430" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">贝叶斯原理中的几个概念：先验概率（通过经验来判断事情发生的概率）、后验概率</tspan><tspan style="white-space:pre" y="35.1" x="8">（后验概率就是发生结果之后，推测原因的概率）、条件概率（事件 A 在另外一个事</tspan><tspan style="white-space:pre" y="54.1" x="8">件 B 已经发生条件下的发生概率）</tspan></text></g><g transform="matrix(1,0,0,1,574,3507)" ed:parentid="112" id="432" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">把概率模型的训练过程理解为求参数估计的过程，似然函数就是用来衡量这个模型的参</tspan><tspan style="white-space:pre" y="35.1" x="8">数</tspan></text></g><g transform="matrix(1,0,0,1,574,3557)" ed:parentid="112" id="434" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">朴素贝叶斯。它是一种简单但极为强大的预测建模算法，它假设每个输入变量是独立</tspan><tspan style="white-space:pre" y="35.1" x="8">的。</tspan></text></g><g transform="matrix(1,0,0,1,574,3607)" ed:parentid="112" id="436" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">朴素贝叶斯模型由两种类型的概率组成：每个类别的概率P(Cj)；每个属性的条件概率</tspan><tspan style="white-space:pre" y="35.1" x="8">P(Ai|Cj)。</tspan></text></g><g transform="matrix(1,0,0,1,574,3657)" ed:parentid="112" id="438" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">贝叶斯原理、贝叶斯分类和朴素贝叶斯这三者之间是有区别的：贝叶斯原理是最大的概</tspan><tspan style="white-space:pre" y="35.1" x="8">念，它解决了概率论中“逆向概率”的问题；贝叶斯分类器，朴素贝叶斯分类是贝叶斯</tspan><tspan style="white-space:pre" y="54.1" x="8">分类器中的一种，也是最简单，最常用的分类器。</tspan></text></g><g transform="matrix(1,0,0,1,574,3726)" ed:parentid="112" id="440" ed:height="24.5" ed:width="265"><path stroke="#696969" fill="none" d="M0,24.5L265,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">朴素贝叶斯分类是常用的贝叶斯分类方法。</tspan></text></g><g transform="matrix(1,0,0,1,574,3757)" ed:parentid="112" id="442" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">朴素贝叶斯分类常用于文本分类，尤其是对于英文等语言来说。常用于垃圾文本过滤、</tspan><tspan style="white-space:pre" y="35.1" x="8">情感预测、推荐系统等。</tspan></text></g><g transform="matrix(1,0,0,1,574,3807)" ed:parentid="112" id="444" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">Scikit-learn，它给我们提供了 3 个朴素贝叶斯分类算法，分别是高斯朴素贝叶斯</tspan><tspan style="white-space:pre" y="35.1" x="8">（GaussianNB）、多项式朴素贝叶斯（MultinomialNB）和伯努利朴素贝叶斯</tspan><tspan style="white-space:pre" y="54.1" x="8">（BernoulliNB）。</tspan></text></g><g transform="matrix(1,0,0,1,574,3876)" ed:parentid="112" id="446" ed:height="24.5" ed:width="330"><path stroke="#696969" fill="none" d="M0,24.5L330,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">高斯朴素贝叶斯：特征变量是连续变量，符合高斯分布</tspan></text></g><g transform="matrix(1,0,0,1,574,3907)" ed:parentid="112" id="448" ed:height="24.5" ed:width="356"><path stroke="#696969" fill="none" d="M0,24.5L356,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">多项式朴素贝叶斯：特征变量是离散变量，符合多项分布，</tspan></text></g><g transform="matrix(1,0,0,1,574,3938)" ed:parentid="112" id="450" ed:height="24.5" ed:width="347"><path stroke="#696969" fill="none" d="M0,24.5L347,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">伯努利朴素贝叶斯：特征变量是布尔变量，符合 0/1 分布</tspan></text></g><g transform="matrix(1,0,0,1,574,3969)" ed:parentid="112" id="452" ed:height="24.5" ed:width="440"><path stroke="#696969" fill="none" d="M0,24.5L440,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">TF-IDF 实际上是词频 TF 和逆向文档频率 IDF 的乘积：TF-IDF=TF*IDF。</tspan></text></g><g transform="matrix(1,0,0,1,574,4000)" ed:parentid="112" id="454" ed:height="24.5" ed:width="381"><path stroke="#696969" fill="none" d="M0,24.5L381,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">一般来说 NTLK 包适用于英文文档，而 jieba 适用于中文文档。</tspan></text></g><g transform="matrix(1,0,0,1,513,4031)" ed:parentid="114" id="456" ed:height="24.5" ed:width="403"><path stroke="#696969" fill="none" d="M0,24.5L403,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">SVM 的英文叫 Support Vector Machine，中文名为支持向量机。</tspan></text></g><g transform="matrix(1,0,0,1,513,4062)" ed:parentid="114" id="458" ed:height="24.5" ed:width="390"><path stroke="#696969" fill="none" d="M0,24.5L390,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">常见的一种分类方法，在机器学习中，SVM 是有监督的学习模型</tspan></text></g><g transform="matrix(1,0,0,1,513,4093)" ed:parentid="114" id="460" ed:height="24.5" ed:width="468"><path stroke="#696969" fill="none" d="M0,24.5L468,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">SVM 作为有监督的学习模型，通常可以帮我们模式识别、分类以及回归分析。</tspan></text></g><g transform="matrix(1,0,0,1,513,4124)" ed:parentid="114" id="462" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">用 SVM 计算的过程就是帮我们找到那个超平面的过程，这个超平面就是我们的 SVM </tspan><tspan style="white-space:pre" y="35.1" x="8">分类器。</tspan></text></g><g transform="matrix(1,0,0,1,513,4174)" ed:parentid="114" id="464" ed:height="24.5" ed:width="225"><path stroke="#696969" fill="none" d="M0,24.5L225,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">一个 SVM 特有的概念：分类间隔。</tspan></text></g><g transform="matrix(1,0,0,1,513,4205)" ed:parentid="114" id="466" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">SVM 就是帮我们找到一个超平面，这个超平面能将不同的样本划分开，同时使得样本</tspan><tspan style="white-space:pre" y="35.1" x="8">集中的点到这个分类超平面的最小距离（即分类间隔）最大化。</tspan></text></g><g transform="matrix(1,0,0,1,513,4255)" ed:parentid="114" id="468" ed:height="24.5" ed:width="468"><path stroke="#696969" fill="none" d="M0,24.5L468,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">SVM 就是求解最大分类间隔的过程，我们还需要对分类间隔的大小进行定义。</tspan></text></g><g transform="matrix(1,0,0,1,513,4286)" ed:parentid="114" id="470" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">硬间隔指的就是完全分类准确，不能存在分类错误的情况。软间隔，就是允许一定量的</tspan><tspan style="white-space:pre" y="35.1" x="8">样本分类错误。</tspan></text></g><g transform="matrix(1,0,0,1,513,4336)" ed:parentid="114" id="472" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">核函数。它可以将样本从原始空间映射到一个更高维的特质空间中，使得样本在新的空</tspan><tspan style="white-space:pre" y="35.1" x="8">间中线性可分</tspan></text></g><g transform="matrix(1,0,0,1,513,4386)" ed:parentid="114" id="474" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">最常用的核函数有线性核、多项式核、高斯核、拉普拉斯核、sigmoid 核，或者是这些</tspan><tspan style="white-space:pre" y="35.1" x="8">核函数的组合。</tspan></text></g><g transform="matrix(1,0,0,1,513,4436)" ed:parentid="114" id="476" ed:height="24.5" ed:width="247"><path stroke="#696969" fill="none" d="M0,24.5L247,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">SVM 既可以做回归，也可以做分类器。</tspan></text></g><g transform="matrix(1,0,0,1,513,4467)" ed:parentid="116" id="478" ed:height="24.5" ed:width="479"><path stroke="#696969" fill="none" d="M0,24.5L479,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">KNN 的英文叫 K-Nearest Neighbor，应该算是数据挖掘算法中最简单的一种。</tspan></text></g><g transform="matrix(1,0,0,1,513,4498)" ed:parentid="116" id="480" ed:height="24.5" ed:width="329"><path stroke="#696969" fill="none" d="M0,24.5L329,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">“近朱者赤，近墨者黑”可以说是 KNN 的工作原理。</tspan></text></g><g transform="matrix(1,0,0,1,513,4529)" ed:parentid="116" id="482" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">交叉验证的思路就是，把样本集中的大部分样本作为训练集，剩余的小部分样本用于预</tspan><tspan style="white-space:pre" y="35.1" x="8">测，来验证分类模型的准确性。</tspan></text></g><g transform="matrix(1,0,0,1,513,4579)" ed:parentid="116" id="484" ed:height="62.5" ed:width="354"><path stroke="#696969" fill="none" d="M0,62.5L354,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">关于距离的计算方式有下面五种方式：1、欧氏距离；</tspan><tspan style="white-space:pre" y="35.1" x="8">2、曼哈顿距离；3、闵可夫斯基距离；4、切比雪夫距离；</tspan><tspan style="white-space:pre" y="54.1" x="8">5、余弦距离。</tspan></text></g><g transform="matrix(1,0,0,1,513,4648)" ed:parentid="116" id="487" ed:height="24.5" ed:width="291"><path stroke="#696969" fill="none" d="M0,24.5L291,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">曼哈顿距离等于两个点在坐标系上绝对轴距总和</tspan></text></g><g transform="matrix(1,0,0,1,513,4679)" ed:parentid="116" id="489" ed:height="24.5" ed:width="421"><path stroke="#696969" fill="none" d="M0,24.5L421,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">二个点之间的切比雪夫距离就是这两个点坐标数值差的绝对值的最大值</tspan></text></g><g transform="matrix(1,0,0,1,513,4710)" ed:parentid="116" id="491" ed:height="24.5" ed:width="447"><path stroke="#696969" fill="none" d="M0,24.5L447,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">余弦距离实际上计算的是两个向量的夹角，是在方向上计算两者之间的差异</tspan></text></g><g transform="matrix(1,0,0,1,513,4741)" ed:parentid="116" id="493" ed:height="24.5" ed:width="299"><path stroke="#696969" fill="none" d="M0,24.5L299,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">KNN 的计算过程是大量计算样本点之间的距离。</tspan></text></g><g transform="matrix(1,0,0,1,513,4772)" ed:parentid="116" id="495" ed:height="24.5" ed:width="247"><path stroke="#696969" fill="none" d="M0,24.5L247,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">KNN 不仅可以做分类，还可以做回归。</tspan></text></g><g transform="matrix(1,0,0,1,513,4803)" ed:parentid="116" id="497" ed:height="24.5" ed:width="459"><path stroke="#696969" fill="none" d="M0,24.5L459,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">推荐算法，针对数据量不大的情况下，采用 KNN 作为推荐算法也是可行的。</tspan></text></g><g transform="matrix(1,0,0,1,513,4834)" ed:parentid="116" id="503" ed:height="24.5" ed:width="343"><path stroke="#696969" fill="none" d="M0,24.5L343,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">手写数字数据集是个非常有名的用于图像识别的数据集。</tspan></text></g><g transform="matrix(1,0,0,1,513,4865)" ed:parentid="116" id="505" ed:height="24.5" ed:width="497"><path stroke="#696969" fill="none" d="M0,24.5L497,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">整个训练过程基本上都会包括三个阶段：1、数据加载；2、准备阶段；3、分类阶段</tspan></text></g><g transform="matrix(1,0,0,1,538,4896)" ed:parentid="118" id="509" ed:height="24.5" ed:width="311"><path stroke="#696969" fill="none" d="M0,24.5L311,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">K-Means 是一种非监督学习，解决的是聚类问题。</tspan></text></g><g transform="matrix(1,0,0,1,538,4927)" ed:parentid="118" id="511" ed:height="100.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,100.5L514,100.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">K-Means 的工作原理：1、选取 K 个点作为初始的类中心点，这些点一般都是从数据</tspan><tspan style="white-space:pre" y="35.1" x="8">集中随机抽取的；2、将每个点分配到最近的类中心点，这样就形成了 K 个类，然后重</tspan><tspan style="white-space:pre" y="54.1" x="8">新计算每个类的中心点；3、重复第二步，直到类不发生变化，或者你也可以设置最大</tspan><tspan style="white-space:pre" y="73.1" x="8">迭代次数，这样即使类中心点发生变化，但是只要达到最大迭代次数就会结束。如何给</tspan><tspan style="white-space:pre" y="92.1" x="8">亚洲球队做聚类</tspan></text></g><g transform="matrix(1,0,0,1,538,5034)" ed:parentid="118" id="513" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">从功能上来划分，sklearn 可以实现分类、聚类、回归、降维、模型选择和预处理等功</tspan><tspan style="white-space:pre" y="35.1" x="8">能。</tspan></text></g><g transform="matrix(1,0,0,1,538,5084)" ed:parentid="118" id="515" ed:height="81.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,81.5L514,81.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">区分 K-Means 和 KNN 这两个算法：1、K-Means 是聚类算法，KNN 是分类算法；</tspan><tspan style="white-space:pre" y="35.1" x="8">2、K-Means 是非监督学习，也就是不需要事先给出分类标签，而 KNN 是有监督学</tspan><tspan style="white-space:pre" y="54.1" x="8">习，需要我们给出训练数据的分类标识；3、K-Means 中的 K 值代表 K 类。KNN 中</tspan><tspan style="white-space:pre" y="73.1" x="8">的 K 值代表 K 个最接近的邻居。</tspan></text></g><g transform="matrix(1,0,0,1,538,5172)" ed:parentid="118" id="517" ed:height="24.5" ed:width="265"><path stroke="#696969" fill="none" d="M0,24.5L265,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">聚类的一个常用场景就是对图像进行分割。</tspan></text></g><g transform="matrix(1,0,0,1,538,5203)" ed:parentid="118" id="519" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">图像分割就是利用图像自身的信息，比如颜色、纹理、形状等特征进行划分，将图像分</tspan><tspan style="white-space:pre" y="35.1" x="8">割成不同的区域，划分出来的每个区域就相当于是对图像中的像素进行了聚类。</tspan></text></g><g transform="matrix(1,0,0,1,529,5253)" ed:parentid="120" id="523" ed:height="24.5" ed:width="330"><path stroke="#696969" fill="none" d="M0,24.5L330,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">三个主要的步骤：初始化参数、观察预期、重新估计。</tspan></text></g><g transform="matrix(1,0,0,1,529,5284)" ed:parentid="120" id="525" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">一个概念“最大似然”，英文是 Maximum Likelihood，Likelihood 代表可能性，所</tspan><tspan style="white-space:pre" y="35.1" x="8">以最大似然也就是最大可能性的意思。</tspan></text></g><g transform="matrix(1,0,0,1,529,5334)" ed:parentid="120" id="527" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">根据我们的经验，相同年龄下男性的平均身高比女性的高一些，所以男同学高的可能性</tspan><tspan style="white-space:pre" y="35.1" x="8">会很大。这里运用的就是最大似然的概念。</tspan></text></g><g transform="matrix(1,0,0,1,529,5384)" ed:parentid="120" id="529" ed:height="24.5" ed:width="497"><path stroke="#696969" fill="none" d="M0,24.5L497,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">EM 算法是一种求解最大似然估计的方法，通过观测样本，来找出样本的模型参数。</tspan></text></g><g transform="matrix(1,0,0,1,529,5415)" ed:parentid="120" id="531" ed:height="24.5" ed:width="250"><path stroke="#696969" fill="none" d="M0,24.5L250,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">EM 算法最直接的应用就是求参数估计。</tspan></text></g><g transform="matrix(1,0,0,1,529,5446)" ed:parentid="120" id="533" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">如果我们把潜在类别当做隐藏变量，样本看做观察值，就可以把聚类问题转化为参数估</tspan><tspan style="white-space:pre" y="35.1" x="8">计问题。这也就是 EM 聚类的原理。</tspan></text></g><g transform="matrix(1,0,0,1,529,5496)" ed:parentid="120" id="535" ed:height="24.5" ed:width="407"><path stroke="#696969" fill="none" d="M0,24.5L407,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">常用的 EM 聚类有 GMM 高斯混合模型和 HMM 隐马尔科夫模型。</tspan></text></g><g transform="matrix(1,0,0,1,529,5527)" ed:parentid="120" id="537" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">EM 算法相当于一个框架，你可以采用不同的模型来进行聚类，比如 GMM（高斯混合</tspan><tspan style="white-space:pre" y="35.1" x="8">模型），或者 HMM（隐马尔科夫模型）来进行聚类。</tspan></text></g><g transform="matrix(1,0,0,1,529,5577)" ed:parentid="120" id="539" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">GMM 是通过概率密度来进行聚类，聚成的类符合高斯分布（正态分布）。而 HMM </tspan><tspan style="white-space:pre" y="35.1" x="8">用到了马尔可夫过程，在这个过程中，我们通过状态转移矩阵来计算状态转移的概率。</tspan></text></g><g transform="matrix(1,0,0,1,529,5627)" ed:parentid="120" id="541" ed:height="24.5" ed:width="344"><path stroke="#696969" fill="none" d="M0,24.5L344,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">HMM 在自然语言处理和语音识别领域中有广泛的应用。</tspan></text></g><g transform="matrix(1,0,0,1,529,5658)" ed:parentid="120" id="543" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">在 EM 这个框架中，E 步骤相当于是通过初始化的参数来估计隐含变量。M 步骤就是</tspan><tspan style="white-space:pre" y="35.1" x="8">通过隐含变量反推来优化参数。最后通过 EM 步骤的迭代得到模型参数。</tspan></text></g><g transform="matrix(1,0,0,1,529,5708)" ed:parentid="120" id="545" ed:height="24.5" ed:width="239"><path stroke="#696969" fill="none" d="M0,24.5L239,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">聚类的原理是“人以群分，物以类聚”</tspan></text></g><g transform="matrix(1,0,0,1,561,5739)" ed:parentid="122" id="547" ed:height="24.5" ed:width="457"><path stroke="#696969" fill="none" d="M0,24.5L457,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">关联规则挖掘可以让我们从数据集中发现项与项（item 与 item）之间的关系</tspan></text></g><g transform="matrix(1,0,0,1,561,5770)" ed:parentid="122" id="549" ed:height="24.5" ed:width="460"><path stroke="#696969" fill="none" d="M0,24.5L460,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">支持度是个百分比，它指的是某个商品组合出现的次数与总次数之间的比例。</tspan></text></g><g transform="matrix(1,0,0,1,561,5801)" ed:parentid="122" id="551" ed:height="24.5" ed:width="437"><path stroke="#696969" fill="none" d="M0,24.5L437,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">置信度是个条件概念，就是说在 A 发生的情况下，B 发生的概率是多少。</tspan></text></g><g transform="matrix(1,0,0,1,561,5832)" ed:parentid="122" id="553" ed:height="24.5" ed:width="263"><path stroke="#696969" fill="none" d="M0,24.5L263,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">提升度 (A→B)= 置信度 (A→B)/ 支持度 (B)</tspan></text></g><g transform="matrix(1,0,0,1,561,5863)" ed:parentid="122" id="555" ed:height="81.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,81.5L514,81.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">支持度指的是某个商品组合出现的次数与总次数之间的比例。支持度越高，代表这个组</tspan><tspan style="white-space:pre" y="35.1" x="8">合出现的概率越大。</tspan><tspan style="white-space:pre" y="54.1" x="8">置信度是一个条件概念，就是在 A 发生的情况下，B 发生的概率是多少。</tspan><tspan style="white-space:pre" y="73.1" x="8">提升度代表的是“商品 A 的出现，对商品 B 的出现概率提升了多少”。</tspan></text></g><g transform="matrix(1,0,0,1,561,5951)" ed:parentid="122" id="557" ed:height="24.5" ed:width="310"><path stroke="#696969" fill="none" d="M0,24.5L310,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">Apriori 算法的核心就是理解频繁项集和关联规则。</tspan></text></g><g transform="matrix(1,0,0,1,543,5982)" ed:parentid="124" id="559" ed:height="62.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,62.5L514,62.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">早期的搜索引擎，会遇到下面的两类问题：1、返回结果质量不高：搜索结果不考虑网</tspan><tspan style="white-space:pre" y="35.1" x="8">页的质量，而是通过时间顺序进行检索；2、容易被人钻空子，有些网页为了增加搜索</tspan><tspan style="white-space:pre" y="54.1" x="8">引擎的排名，故意增加某个检索词的频率。</tspan></text></g><g transform="matrix(1,0,0,1,543,6051)" ed:parentid="124" id="561" ed:height="24.5" ed:width="356"><path stroke="#696969" fill="none" d="M0,24.5L356,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">出链指的是链接出去的链接。入链指的是链接进来的链接。</tspan></text></g><g transform="matrix(1,0,0,1,543,6082)" ed:parentid="124" id="563" ed:height="24.5" ed:width="433"><path stroke="#696969" fill="none" d="M0,24.5L433,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">PageRank 的计算过程，实际情况会比这个复杂，可能会面临两个问题：</tspan></text></g><g transform="matrix(1,0,0,1,543,6113)" ed:parentid="124" id="565" ed:height="24.5" ed:width="406"><path stroke="#696969" fill="none" d="M0,24.5L406,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">只要是有网络的地方，就存在出链和入链，就会有 PR 权重的计算，</tspan></text></g><g transform="matrix(1,0,0,1,543,6144)" ed:parentid="124" id="567" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">实际上有一个关于图论和网络建模的工具叫 NetworkX，它是用 Python 语言开发的工</tspan><tspan style="white-space:pre" y="35.1" x="8">具，内置了常用的图与网络分析算法</tspan></text></g><g transform="matrix(1,0,0,1,542,6194)" ed:parentid="126" id="571" ed:height="43.5" ed:width="514"><path stroke="#696969" fill="none" d="M0,43.5L514,43.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">在数据挖掘中，分类算法可以说是核心算法，其中 AdaBoost 算法与随机森林算法一样</tspan><tspan style="white-space:pre" y="35.1" x="8">都属于分类算法中的集成算法。</tspan></text></g><g transform="matrix(1,0,0,1,542,6244)" ed:parentid="126" id="573" ed:height="24.5" ed:width="486"><path stroke="#696969" fill="none" d="M0,24.5L486,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">集成算法通常有两种方式，分别是投票选举（bagging）和再学习（boosting）。</tspan></text></g><g transform="matrix(1,0,0,1,542,6275)" ed:parentid="126" id="575" ed:height="24.5" ed:width="380"><path stroke="#696969" fill="none" d="M0,24.5L380,24.5" stroke-linejoin="round"/><text class="st3"><tspan style="white-space:pre" y="16.1" x="8">实际上，AdaBoost 算法是通过改变样本的数据分布来实现的。</tspan></text></g><symbol id="plus"><path fill="url(#lg1)" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z"/><path fill="none" stroke="#46a000" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6M6,3L6,9" stroke-width="0.7"/></symbol><symbol id="minus"><path fill="url(#lg1)" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6z"/><path fill="none" stroke="#46a000" d="M11,6C11,8.8,8.8,11,6,11C3.2,11,1,8.8,1,6C1,3.2,3.2,1,6,1C8.8,1,11,3.2,11,6zM3,6L9,6" stroke-width="0.7"/></symbol><g transform="translate(262,3320)" ed:togtopicid="101"><use xlink:href="#minus"/></g><g transform="translate(412,1405)" ed:togtopicid="102"><use xlink:href="#minus"/></g><g transform="translate(412,4525)" ed:togtopicid="104"><use xlink:href="#minus"/></g><g transform="translate(412,6385)" ed:togtopicid="106"><use xlink:href="#minus"/></g><g transform="translate(412,6551)" ed:togtopicid="108"><use xlink:href="#minus"/></g><g transform="translate(496,3091)" ed:togtopicid="110"><use xlink:href="#minus"/></g><g transform="translate(548,3725)" ed:togtopicid="112"><use xlink:href="#minus"/></g><g transform="translate(487,4239)" ed:togtopicid="114"><use xlink:href="#minus"/></g><g transform="translate(487,4672)" ed:togtopicid="116"><use xlink:href="#minus"/></g><g transform="translate(512,5065)" ed:togtopicid="118"><use xlink:href="#minus"/></g><g transform="translate(503,5486)" ed:togtopicid="120"><use xlink:href="#minus"/></g><g transform="translate(535,5851)" ed:togtopicid="122"><use xlink:href="#minus"/></g><g transform="translate(517,6078)" ed:togtopicid="124"><use xlink:href="#minus"/></g><g transform="translate(516,6240)" ed:togtopicid="126"><use xlink:href="#minus"/></g><g transform="translate(496,144)" ed:togtopicid="128"><use xlink:href="#minus"/></g><g transform="translate(509,290)" ed:togtopicid="130"><use xlink:href="#minus"/></g><g transform="translate(509,406)" ed:togtopicid="132"><use xlink:href="#minus"/></g><g transform="translate(625,664)" ed:togtopicid="134"><use xlink:href="#minus"/></g><g transform="translate(535,982)" ed:togtopicid="136"><use xlink:href="#minus"/></g><g transform="translate(509,1217)" ed:togtopicid="138"><use xlink:href="#minus"/></g><g transform="translate(509,1498)" ed:togtopicid="140"><use xlink:href="#minus"/></g><g transform="translate(527,1650)" ed:togtopicid="142"><use xlink:href="#minus"/></g><g transform="translate(509,1793)" ed:togtopicid="144"><use xlink:href="#minus"/></g><g transform="translate(509,2080)" ed:togtopicid="146"><use xlink:href="#minus"/></g><g transform="translate(509,2365)" ed:togtopicid="148"><use xlink:href="#minus"/></g><g transform="translate(522,2609)" ed:togtopicid="150"><use xlink:href="#minus"/></g><g transform="translate(561,6489)" ed:togtopicid="152"><use xlink:href="#minus"/></g><g transform="translate(535,6520)" ed:togtopicid="154"><use xlink:href="#minus"/></g><g transform="translate(548,6582)" ed:togtopicid="156"><use xlink:href="#minus"/></g><g transform="translate(412,34)" ed:togtopicid="186"><use xlink:href="#minus"/></g></svg>